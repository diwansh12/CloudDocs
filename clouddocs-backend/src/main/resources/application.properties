# ===== CORE APPLICATION SETTINGS =====
server.port=${PORT:8080}
server.servlet.context-path=/api
spring.application.name=CloudDocs Backend API
spring.profiles.active=${SPRING_PROFILES_ACTIVE:production}

# ✅ CRITICAL: Enable lazy initialization (saves 30-50MB)
spring.main.lazy-initialization=true

# ===== MEMORY-OPTIMIZED SERVER CONFIGURATION =====
# ✅ FIXED: Consistent thread pool settings (was conflicting: max=3, min-spare=20)
server.tomcat.threads.max=3
server.tomcat.threads.min-spare=1
server.tomcat.accept-count=10
server.tomcat.max-connections=20
server.tomcat.connection-timeout=60000
server.tomcat.keep-alive-timeout=30000

# ✅ OPTIMIZED: Keep essential compression, disable memory-heavy HTTP/2
server.http2.enabled=false
server.compression.enabled=true
server.compression.mime-types=application/json,text/html,text/xml,text/plain
server.compression.min-response-size=1024

# ✅ SECURITY: Session cookie configuration
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict

# ===== OPTIMIZED DATABASE CONFIGURATION =====
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# ✅ CRITICAL: Ultra-minimal connection pool (was 5, now 1)
spring.datasource.hikari.maximum-pool-size=1
spring.datasource.hikari.minimum-idle=0
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.leak-detection-threshold=0

# ===== HIBERNATE MEMORY OPTIMIZATION =====
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.defer-datasource-initialization=false
spring.jpa.show-sql=false
spring.jpa.open-in-view=false

# ✅ MEMORY: Disable all caches
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.internal.NoCachingRegionFactory

# ✅ OPTIMIZED: Reduced batch processing (was 20, now 5)
spring.jpa.properties.hibernate.connection.autocommit=false
spring.jpa.properties.hibernate.transaction.flush_before_completion=true
spring.jpa.properties.hibernate.transaction.auto_close_session=true
spring.jpa.properties.hibernate.jdbc.batch_size=5
spring.jpa.properties.hibernate.order_inserts=false
spring.jpa.properties.hibernate.order_updates=false

# ✅ CRITICAL: Timezone configuration
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.properties.hibernate.timezone.default_storage=NORMALIZE

# ✅ MEMORY: Disable expensive operations
spring.jpa.properties.hibernate.generate_statistics=false

# ===== JACKSON/JSON CONFIGURATION =====
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=UTC
spring.jackson.serialization.fail-on-empty-beans=false

# ===== YOUR EMAIL CONFIGURATION (KEPT) =====
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# ===== OPTIMIZED FILE STORAGE =====
# ✅ CONSISTENT: Single file size limit
spring.servlet.multipart.max-file-size=500KB
spring.servlet.multipart.max-request-size=500KB
spring.servlet.multipart.enabled=true
spring.servlet.multipart.resolve-lazily=true
spring.servlet.multipart.file-size-threshold=0

# ===== OPTIMIZED LOGGING (reduced verbosity) =====
logging.level.root=WARN
logging.level.com.clouddocs.backend=INFO
logging.level.com.clouddocs.backend.service.WorkflowService=INFO
logging.level.org.hibernate=WARN
logging.level.org.springframework=WARN
logging.level.org.apache.tomcat=WARN

# ===== MINIMAL ACTUATOR =====
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized

# ===== OPTIMIZED TASK EXECUTION =====
# ✅ REDUCED: Thread pools (was 50 max, now 5)
spring.task.scheduling.pool.size=2
spring.task.execution.pool.core-size=2
spring.task.execution.pool.max-size=5
spring.task.execution.pool.queue-capacity=25
spring.task.execution.pool.allow-core-thread-timeout=true
spring.task.execution.pool.keep-alive=60s
spring.task.execution.thread-name-prefix=workflow-task-

# ===== TRANSACTION CONFIGURATION =====
spring.transaction.default-timeout=30
spring.transaction.rollback-on-commit-failure=true

# ===== ERROR HANDLING =====
server.error.include-exception=false
server.error.include-message=always
server.error.include-binding-errors=never
server.error.include-stacktrace=never

# ===== GRACEFUL SHUTDOWN =====
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=10s

# ✅ MEMORY: Disable resource-heavy features
spring.jmx.enabled=false
spring.devtools.restart.enabled=false

# ===== YOUR TWILIO CONFIGURATION (KEPT) =====
app.twilio.account-sid=${TWILIO_ACCOUNT_SID}
app.twilio.auth-token=${TWILIO_AUTH_TOKEN}
app.twilio.phone=${TWILIO_PHONE}

# ===== JWT CONFIGURATION (KEPT) =====
app.jwtSecret=${JWT_SECRET}
app.jwtExpirationMs=86400000

# ===== CORS CONFIGURATION (KEPT) =====
app.cors.allowed-origins=${CORS_ORIGINS:https://cloud-docs-tan.vercel.app,http://localhost:3000}

# ===== FILE UPLOAD CONFIGURATION (KEPT) =====
file.upload-dir=./uploads

# ===== FIREBASE CONFIGURATION (KEPT) =====
app.firebase.service-account-key=${FIREBASE_SERVICE_ACCOUNT_KEY}

# ===== WORKFLOW CONFIGURATION (KEPT & OPTIMIZED) =====
app.workflow.default-sla-hours=24
app.workflow.max-concurrent-workflows=25
app.workflow.auto-cleanup-days=90

# ===== ANALYTICS CONFIGURATION (KEPT) =====
app.analytics.cache-duration=300
app.analytics.max-date-range-days=365

# ===== NOTIFICATION CONFIGURATION (KEPT & OPTIMIZED) =====
app.notifications.email-enabled=true
app.notifications.sms-enabled=true
app.notifications.batch-size=25

# ===== AUDIT CONFIGURATION (KEPT) =====
app.audit.enabled=true
app.audit.retention-days=365
app.audit.async-enabled=true

# ===== RATE LIMITING (OPTIMIZED) =====
app.rate-limit.enabled=true
app.rate-limit.requests-per-minute=500
app.rate-limit.burst-capacity=750

# ===== AI FEATURES (KEPT) =====
ai.search.enabled=true
ai.chat.enabled=true
ai.embedding.enabled=true

# ===== AI PROVIDERS (KEPT) =====
ai.providers.openai.enabled=true
ai.providers.openai.priority=1
openai.api.key=${OPENAI_API_KEY}

ai.providers.cohere.enabled=true
ai.providers.cohere.priority=2
ai.providers.cohere.api-key=${COHERE_API_KEY:}
ai.providers.cohere.model=embed-english-v3.0

ai.providers.health-check.enabled=true
ai.providers.health-check.interval=300000

ai.fallback.enabled=true
ai.fallback.max-retries=3
ai.fallback.retry-delay=2000

# ===== OCR CONFIGURATION (KEPT & OPTIMIZED) =====
ocr.enabled=${OCR_ENABLED:true}
ocr.timeout=${OCR_TIMEOUT:120000}
ocr.max-file-size=${OCR_MAX_FILE_SIZE:500KB}

# ===== TESSERACT CONFIGURATION (KEPT) =====
tesseract.path=${TESSERACT_PATH:/usr/bin/tesseract}
tesseract.datapath=${TESSERACT_DATAPATH:/usr/share/tessdata}
tesseract.language=eng
tesseract.psm=1
tesseract.oem=3

# ✅ CONSISTENT: OCR settings
app.ocr.max-file-size-mb=1
app.ocr.max-dimension=500
app.ocr.enable-compression=true
app.ocr.memory-threshold-percent=60

# ===== REDIS CONFIGURATION (OPTIMIZED) =====
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}
spring.data.redis.password=${REDIS_PASSWORD}
spring.data.redis.username=${REDIS_USERNAME}
spring.data.redis.database=0
spring.data.redis.timeout=30000ms

# ✅ OPTIMIZED: Redis connections (was 25, now 2)
spring.data.redis.lettuce.pool.max-active=2
spring.data.redis.lettuce.pool.max-idle=1
spring.data.redis.lettuce.pool.min-idle=0
spring.data.redis.lettuce.pool.max-wait=5000ms

# ✅ OPTIMIZED: Cache settings
spring.cache.type=redis
spring.cache.redis.time-to-live=600000
spring.cache.redis.cache-null-values=false
