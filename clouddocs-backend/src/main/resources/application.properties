# ===== CORE APPLICATION SETTINGS =====
server.port=${PORT:8080}
server.servlet.context-path=/api
server.address=0.0.0.0
spring.application.name=CloudDocs

# âœ… CRITICAL: Enable lazy loading for memory efficiency
spring.main.lazy-initialization=true
spring.main.web-application-type=servlet

# ===== MEMORY-OPTIMIZED SERVER =====
server.tomcat.threads.max=2
server.tomcat.threads.min-spare=1
server.tomcat.accept-count=5
server.tomcat.max-connections=12
server.tomcat.connection-timeout=45000

# ===== DISABLE MEMORY-HEAVY FEATURES =====
server.http2.enabled=false
server.compression.enabled=true
server.compression.mime-types=application/json,text/plain
spring.jmx.enabled=false
spring.devtools.restart.enabled=false

# ===== âœ… CRITICAL: COMPLETE DATABASE CONFIGURATION =====
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.driver-class-name=org.postgresql.Driver

# âœ… CRITICAL: Explicitly set Hibernate dialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.open-in-view=false
spring.jpa.defer-datasource-initialization=false

# âœ… OPTIMIZED: Minimal connection pool
spring.datasource.hikari.maximum-pool-size=2
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=600000

# ===== HIBERNATE OPTIMIZATION =====
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false
spring.jpa.properties.hibernate.jdbc.batch_size=10
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# ===== âœ… DISABLE CACHING COMPLETELY (MEMORY SAVINGS) =====
spring.cache.type=none

# ===== FILE HANDLING =====
spring.servlet.multipart.max-file-size=500KB
spring.servlet.multipart.max-request-size=500KB
spring.servlet.multipart.resolve-lazily=true

# ===== JWT CONFIGURATION =====
app.jwtSecret=${JWT_SECRET}
app.jwtExpirationMs=86400000

# ===== CORS CONFIGURATION =====
app.cors.allowed-origins=${CORS_ORIGINS:https://cloud-docs-tan.vercel.app,http://localhost:3000}

# ===== AI SERVICES (MEMORY-CONSCIOUS) =====
ai.search.enabled=true
ai.chat.enabled=true
ai.embedding.enabled=true

# âœ… AI Providers
ai.providers.openai.enabled=true
ai.providers.openai.priority=1
openai.api.key=${OPENAI_API_KEY}

ai.providers.cohere.enabled=true
ai.providers.cohere.priority=2
ai.providers.cohere.api-key=${COHERE_API_KEY:}
ai.providers.cohere.model=embed-english-v3.0

# âœ… OPTIMIZED: AI Provider Settings
ai.providers.health-check.enabled=false
ai.fallback.enabled=true
ai.fallback.max-retries=2
ai.fallback.retry-delay=1000

# ===== ANALYTICS CONFIGURATION (OPTIMIZED) =====
app.analytics.cache-duration=180
app.analytics.max-date-range-days=30
app.analytics.batch-size=20
app.analytics.async-enabled=true

# ===== AUDIT CONFIGURATION (OPTIMIZED) =====
app.audit.enabled=true
app.audit.retention-days=90
app.audit.async-enabled=true
app.audit.batch-size=20

# ===== ðŸš« OCR CONFIGURATION (COMPLETELY DISABLED FOR MEMORY OPTIMIZATION) =====
ocr.enabled=false

# âœ… REMOVED: All Tesseract/OCR configurations since OCR is disabled
# Previous configs removed for memory savings:
# - tesseract.path (not needed - OCR disabled)
# - tesseract.datapath (not needed - OCR disabled) 
# - tesseract.language (not needed - OCR disabled)
# - ocr.timeout (not needed - no OCR processing)
# - ocr.max-file-size (not needed - no OCR processing)
# - app.ocr.* settings (not needed - OCR service disabled)

# ===== WORKFLOW CONFIGURATION (OPTIMIZED) =====
app.workflow.default-sla-hours=24
app.workflow.max-concurrent-workflows=10
app.workflow.auto-cleanup-days=30

# ===== NOTIFICATION CONFIGURATION (EMAIL ONLY, NO SMS/FIREBASE/PUSH) =====
app.notifications.email-enabled=true
app.notifications.sms-enabled=false
app.notifications.push-enabled=false
app.notifications.batch-size=10

# ===== EMAIL CONFIGURATION =====
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# ===== OPTIMIZED TASK EXECUTION =====
spring.task.scheduling.pool.size=1
spring.task.execution.pool.core-size=2
spring.task.execution.pool.max-size=4
spring.task.execution.pool.queue-capacity=20

# ===== MEMORY-CONSCIOUS LOGGING =====
logging.level.root=WARN
logging.level.com.clouddocs.backend=INFO
logging.level.com.clouddocs.backend.service.ai=WARN
logging.level.com.clouddocs.backend.service.analytics=WARN
logging.level.org.hibernate=WARN
logging.level.org.springframework=WARN

# ===== MINIMAL ACTUATOR =====
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized

# ===== EXCLUDE AUTO-CONFIGURATIONS (NO FIREBASE/TWILIO/OCR) =====
spring.autoconfigure.exclude=\
  org.springframework.boot.autoconfigure.firebase.FirebaseAutoConfiguration,\
  com.twilio.spring.boot.starter.TwilioAutoConfiguration

# ===== JACKSON CONFIGURATION =====
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=UTC
spring.jackson.serialization.fail-on-empty-beans=false

# ===== MEMORY OPTIMIZATION FLAGS =====
server.tomcat.max-http-form-post-size=1MB
server.tomcat.max-swallow-size=1MB

# ===== ðŸŽ¯ MEMORY OPTIMIZATION SUMMARY =====
# Total memory saved by disabling features:
# - OCR/Tess4j disabled: ~150-250MB during processing
# - Firebase removed: ~70-100MB 
# - Minimal connection pools: ~20-30MB
# - No caching: ~10-20MB
# - SMS/Twilio disabled: ~40-60MB
# Expected total usage: 150-250MB (well under 512MB limit)

# ===== JVM MEMORY TUNING (FOR RENDER DEPLOYMENT) =====
# Set these as JAVA_TOOL_OPTIONS in Render dashboard:
# -Xmx200m -Xms100m -XX:+UseSerialGC -Xss128k 
# -XX:MaxDirectMemorySize=15m -XX:MetaspaceSize=80m 
# -XX:CompressedClassSpaceSize=10m -XX:MaxGCPauseMillis=100
